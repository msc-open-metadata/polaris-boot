version: "3"

tasks:
  init:
    desc: init repo
    cmds:
      - task: init:pre-commit
      - uv venv
      - uv sync
      - mkdir -p secrets
      - touch secrets/hr-client-id secrets/hr-client-secret secrets/engineer-client-secret secrets/engineer-client-id
      - cp example.env .env

  init:pre-commit:
    desc: Install pre-commit hooks
    cmds:
      - uv add pre-commit --dev
      - uv run pre-commit install --hook-type commit-msg

  cli-create-catalog-local:
    desc: create local memory quickstart_catalog
    dir: ../polaris
    cmds:
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        catalogs \
        create \
        --storage-type FILE \
        --default-base-location ${DEFAULT_BASE_LOCATION} \
        quickstart_catalog

  cli-create-principal:
    desc: create a principal that has access to manage that catalog
    dir: ../polaris
    cmds:
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        principals \
        create \
        quickstart_user
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        principal-roles \
        create \
        quickstart_user_role
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        catalog-roles \
        create \
        --catalog quickstart_catalog \
        quickstart_catalog_role

  cli-grant-roles:
    desc: we grant the principal the principal role we created, and grant the catalog role the principal role we created.
    cmds:
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        principal-roles \
        grant \
        --principal quickstart_user \
        quickstart_user_role
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        catalog-roles \
        grant \
        --catalog quickstart_catalog \
        --principal-role quickstart_user_role \
        quickstart_catalog_role

  cli-assign-privelege:
    desc: This grants the catalog privileges CATALOG_MANAGE_CONTENT to our catalog role
    dir: ../polaris
    cmds:
      - |
        ./polaris \
        --client-id ${CLIENT_ID} \
        --client-secret ${CLIENT_SECRET} \
        privileges \
        catalog \
        grant \
        --catalog quickstart_catalog \
        --catalog-role quickstart_catalog_role \
        CATALOG_MANAGE_CONTENT

  cli-demo-spark:
    dir: ../spark
    desc: Run spark with polaris catalog file location = spark.sql("DESCRIBE FORMATTED quickstart_table").show(false)
    cmds:
      - |
        ./bin/spark-shell \
        --packages org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.7.1,org.apache.hadoop:hadoop-aws:3.4.0 \
        --conf spark.sql.extensions=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions \
        --conf spark.sql.catalog.quickstart_catalog.warehouse=quickstart_catalog \
        --conf spark.sql.catalog.quickstart_catalog.header.X-Iceberg-Access-Delegation=vended-credentials \
        --conf spark.sql.catalog.quickstart_catalog=org.apache.iceberg.spark.SparkCatalog \
        --conf spark.sql.catalog.quickstart_catalog.catalog-impl=org.apache.iceberg.rest:RESTCatalog \
        --conf spark.sql.catalog.quickstart_catalog.uri=http://localhost:8181/api/catalog \
        --conf spark.sql.catalog.quickstart_catalog.credential=${PRINCIPAL_CLIENT_ID}:${PRINCIPAL_CLIENT_SECRET} \
        --conf spark.sql.catalog.quickstart_catalog.scope='PRINCIPAL_ROLE:ALL' \
        --conf spark.sql.catalog.quickstart_catalog.token-refresh-enabled=true \
        --conf spark.sql.catalog.quickstart_catalog.client.region=us-west-2

  activate-venv:
    dir: ../polaris
    cmds:
      - source polaris-venv/bin/activate

  print-env:
    dotenv: [".env"]
    cmd: env

  bootstrap-env:
    cmds:
      - export $(grep -v '^#' .envs/polaris-demo.env | xargs)

  catalogs-list:
    cmds:
      - ./polaris catalogs list

  docker:build:spark-jupyter-image:
    dir: polaris-spark-local
    cmds:
      - docker build -t "spark-jupyter" -f Dockerfile .

  build:polaris-local:
    dir: ../polaris
    cmd: ./gradlew clean :polaris-quarkus-server:assemble -Dquarkus.container-image.build=true -PincludeOpendic --no-build-cache

  build:spark:
    dir: ../spark
    cmd: ./build/mvn -DskipTests clean package

  build:polaris-postgres-img:
    dir: ../polaris
    cmd: |
      ./gradlew clean :polaris-quarkus-server:assemble :polaris-quarkus-admin:assemble \
       -PeclipseLinkDeps=org.postgresql:postgresql:42.7.4 \
       -Dquarkus.container-image.build=true \
       --no-build-cache

  build:polaris-opendic:
    dir: ../polaris
    cmds:
      - |
        ./gradlew clean :polaris-quarkus-server:assemble \
        -Dquarkus.container-image.build=true \
        -PincludeOpendic=true \
        --no-build-cache
      - docker image rmi apache/polaris:1.0.0-incubating-SNAPSHOT
      - docker image prune

  build:polaris-opendic-postgres-admin:
    dir: ../polaris
    cmds:
      - |
        ./gradlew clean :polaris-quarkus-server:assemble :polaris-quarkus-admin:assemble \
        -PeclipseLinkDeps=org.postgresql:postgresql:42.7.4 \
        -Dquarkus.container-image.build=true \
        -PincludeOpendic=true \
        --no-build-cache
      - docker image rmi apache/polaris:1.0.0-incubating-SNAPSHOT apache/polaris-admin-tool:1.0.0-incubating-SNAPSHOT
      - docker image prune
  build:polaris-opendic-postgres:
    dir: ../polaris
    cmds:
      - |
        ./gradlew clean :polaris-quarkus-server:assemble \
        -PeclipseLinkDeps=org.postgresql:postgresql:42.7.4 \
        -Dquarkus.container-image.build=true \
        -PincludeOpendic=true \
        --no-build-cache
      - docker image prune

  docker:compose:up-polaris-spark-local:
    cmds:
      - docker compose -f polaris-spark-local/docker-compose.yml up
  docker:compose:up-polaris-spark-local-postgres:
    cmds:
      - docker compose -f polaris-spark-local-postgres/docker-compose.yml up
  docker:compose:up-polaris-postgres:
    cmds:
      - docker compose -f polaris-spark-local-postgres/docker-compose-slim.yml up

  docker:compose:up-polaris-spark-minio:
    cmds:
      - docker compose -f polaris-spark-minio/docker-compose.yml up

  gradle:build-polaris-postgres:
    dir: ../polaris-fork
    cmd: |
      ./gradlew :polaris-quarkus-server:assemble :polaris-quarkus-admin:assemble \
       -PeclipseLinkDeps=org.postgresql:postgresql:42.7.4 \
       -Dquarkus.container-image.tag=postgres-latest \
       -Dquarkus.container-image.build=true

  rest:get-auth-token:
    dotenv: [".env"]
    cmds:
      - |
        echo "PRINCIPAL_TOKEN=$(curl -i -X POST \
        http://localhost:8181/api/catalog/v1/oauth/tokens \
        -d "grant_type=client_credentials" \
        -d "client_id=$CLIENT_ID" \
        -d "client_secret=$CLIENT_SECRET" \
        -d "scope=PRINCIPAL_ROLE:ALL" | awk -F\" '{print $4}'| tr -d '[:space:]')" | sed -i '' "s/^PRINCIPAL_TOKEN=.*/$(cat)/" .env

  rest:test-iceberg-spec:
    dotenv: [".env"]
    deps: [rest:get-auth-token]
    cmds:
      - |
        curl -X 'GET' \
        'http://localhost:8181/api/catalog/v1/polaris/namespaces' \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
        -H 'accept: application/json'
      - |
        curl -X 'GET' \
        'http://localhost:8181/api/catalog/v1/config' \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
        -H 'accept: application/json' \
        -d '{
          "warehouse": "file:///tmp/polaris/"
        }'

  rest:get-auth-token-debug:
    dotenv: [".env"]
    cmds:
      - |
        curl -i -X POST \
        http://localhost:8181/api/catalog/v1/oauth/tokens \
        -d "grant_type=client_credentials" \
        -d "client_id=$CLIENT_ID" \
        -d "client_secret=$CLIENT_SECRET" \
        -d "scope=PRINCIPAL_ROLE:ALL"

  rest:create-catalog-local:
    dotenv: [".env"]
    cmds:
      - |
        curl -i -X POST -H "Authorization: Bearer $PRINCIPAL_TOKEN" -H 'Accept: application/json' -H 'Content-Type: application/json' \
        http://localhost:8181/api/management/v1/catalogs \
        -d '{
             "catalog": {
               "name": "polaris",
               "type": "INTERNAL",
               "readOnly": false,
               "properties": {
                 "default-base-location": "file:///data/"
               },
               "storageConfigInfo": {
                 "storageType": "FILE",
                 "allowedLocations": [
                   "file:///data/"
                 ]
               }
             }
           }'

  rest:create-catalog-s3:
    dotenv: [".env"]
    cmds:
      - |
        curl -i -X POST -H "Authorization: Bearer $PRINCIPAL_TOKEN" -H 'Accept: application/json' -H 'Content-Type: application/json' \
        http://localhost:8181/api/management/v1/catalogs \
        -d '{"name": "polaris", "type": "INTERNAL", "properties": {
              "default-base-location": "http://localhost:9000/warehouse/lake"
          },"storageConfigInfo": {
              "roleArn": "arn:minio:s3:::warehouse",
              "storageType": "s3",
              "allowedLocations": [
                  "http://localhost:9000/warehouse/lake"
              ]
          } }'
  rest:create-catalog-azure:
    dotenv: [".env"]
    cmds:
      - |
        curl -i -X POST -H "Authorization: Bearer $PRINCIPAL_TOKEN" -H 'Accept: application/json' -H 'Content-Type: application/json' \
        http://localhost:8181/api/management/v1/catalogs \
        -d '{"name": "AZURE_CATALOG", "type": "INTERNAL", "properties": {
              "default-base-location": "'"$AZURE_BUCKET_URI"'"
          },"storageConfigInfo": {
              "storageType": "AZURE",
              "tenantId": "'"$AZURE_TENANT_ID"'",
              "allowedLocations": [
              "'"$AZURE_BUCKET_URI"'"
              ]
          } }'

  rest:list-catalogs:
    dotenv: [".env"]
    cmds:
      - |
        curl -X GET "http://localhost:8181/api/management/v1/catalogs" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN"

  rest:create-principal-user:
    dotenv: [".env"]
    cmds:
      - uv run python utils/create-principal.py engineer $PRINCIPAL_TOKEN

  rest:list-principals:
    dotenv: [".env"]
    cmds:
      - |
        curl -X GET "http://localhost:8181/api/management/v1/principals" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
        -H "Content-Type: application/json" \

  rest:create-principal-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X POST "http://localhost:8181/api/management/v1/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "engineer-role"}}'

  rest:bootstrap-hr:
    dotenv: [".env"]
    cmds:
      - echo "Creating hr-principal..."
      - uv run python  utils/create-principal.py hr $PRINCIPAL_TOKEN
      - echo "Creating read-only-principal-role..."
      - |
        curl -X POST "http://localhost:8181/api/management/v1/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "hr-role"}}'

      - echo "Assigning hr-role to principals..."
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principals/engineer/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "hr-role"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principals/hr/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "hr-role"}}'

      - echo "Creating read-only-catalog-role..."
      - |
        curl -X POST "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles" \
            -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"catalogRole": {"name": "read-only-catalog-role"}}'

      - echo "Assigning read-only-catalog-role to read-only-principal-role..."
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principal-roles/hr-role/catalog-roles/polaris" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"catalogRole": {"name": "read-only-catalog-role"}}'

      - echo "Granting read-only-catalog-role CATALOG_READ_PROPERTIES..."
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "TABLE_LIST"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "TABLE_READ_PROPERTIES"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "TABLE_READ_DATA"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "VIEW_LIST"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "VIEW_READ_PROPERTIES"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "NAMESPACE_READ_PROPERTIES"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "NAMESPACE_LIST"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/read-only-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "LOAD_NAMESPACE_METADATA"}}'

  rest:list-grants-for-catalog-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X GET "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/$CATALOG_ROLE/grants" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN"
    env:
      CATALOG_ROLE: read-only-catalog-role

  rest:list-catalog-roles-for-principal-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X GET "http://localhost:8181/api/management/v1/principal-roles/$PRINCIPAL_ROLE/catalog-roles/$CATALOG" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN"
    env:
      PRINCIPAL_ROLE: hr-role
      CATALOG: polaris

  rest:assign-principal-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principals/engineer/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "engineer-role"}}'

  rest:create-catalog-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X POST "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"catalogRole": {"name": "engineer-catalog-role"}}'

  rest:assign-catalog-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principal-roles/engineer-role/catalog-roles/polaris" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"catalogRole": {"name": "engineer-catalog-role"}}'

  rest:grant-catalog-role-privelege:
    dotenv: [".env"]
    cmds:
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/polaris/catalog-roles/engineer-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "CATALOG_MANAGE_CONTENT"}}'

  rest:azure-catalog:create-principal-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X POST "http://localhost:8181/api/management/v1/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "azure-engineer-role"}}'

  rest:azure-catalog:assign-principal-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principals/engineer/principal-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"principalRole": {"name": "azure-engineer-role"}}'

  rest:azure-catalog:create-catalog-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X POST "http://localhost:8181/api/management/v1/catalogs/AZURE_CATALOG/catalog-roles" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"catalogRole": {"name": "azure-engineer-catalog-role"}}'

  rest:azure-catalog:assign-catalog-role:
    dotenv: [".env"]
    cmds:
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/principal-roles/azure-engineer-role/catalog-roles/AZURE_CATALOG" \
        -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"catalogRole": {"name": "azure-engineer-catalog-role"}}'

  rest:azure-catalog:grant-catalog-role-privelege:
    dotenv: [".env"]
    cmds:
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/AZURE_CATALOG/catalog-roles/azure-engineer-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "CATALOG_MANAGE_CONTENT"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/AZURE_CATALOG/catalog-roles/azure-engineer-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "TABLE_FULL_METADATA"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/AZURE_CATALOG/catalog-roles/azure-engineer-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "TABLE_WRITE_DATA"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/AZURE_CATALOG/catalog-roles/azure-engineer-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "TABLE_READ_DATA"}}'
      - |
        curl -X PUT "http://localhost:8181/api/management/v1/catalogs/AZURE_CATALOG/catalog-roles/azure-engineer-catalog-role/grants" \
          -H "Authorization: Bearer $PRINCIPAL_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"grant": {"type": "catalog", "privilege": "CREATE_TABLE"}}'

  rest:bootstrap-engineer:
    deps:
      - rest:get-auth-token
    cmds:
      - task rest:create-catalog-local
      - task rest:create-principal-user
      - task rest:create-principal-role
      - task rest:assign-principal-role
      - task rest:create-catalog-role
      - task rest:assign-catalog-role
      - task rest:grant-catalog-role-privelege

  rest:azure-catalog:bootstrap-engineer:
    deps:
      - rest:get-auth-token
    cmds:
      - task rest:create-catalog-azure
      - task rest:create-principal-user
      - task rest:azure-catalog:create-principal-role
      - task rest:azure-catalog:assign-principal-role
      - task rest:azure-catalog:create-catalog-role
      - task rest:azure-catalog:assign-catalog-role
      - task rest:azure-catalog:grant-catalog-role-privelege

  test:
    cmd: uv run pytest -s
